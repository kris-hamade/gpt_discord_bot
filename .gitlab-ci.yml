stages:
- publish
- deploy
- postman_tests
- convert_postman_to_k6
- load_test_k6
variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
publish:
  stage: publish
  image: docker:20.10
  services:
  - docker:20.10-dind
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build -t $TAG_COMMIT -t $TAG_LATEST .
  - docker push $TAG_COMMIT
  - docker push $TAG_LATEST
  rules:
  - if: '$CI_COMMIT_REF_NAME == "main"'
  - if: '$CI_COMMIT_REF_NAME == "dev_deploy"'
deploy:
  stage: deploy
  image: docker:20.10
  tags:
  - deployment
  services:
  - docker:20.10-dind
  before_script:
  - apk add --no-cache curl
  script:
  - chmod og= "$ID_RSA"
  - apk update && apk add openssh-client
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY"
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $TAG_COMMIT"
  - >
    if [[ "$CI_COMMIT_REF_NAME" == "main" ]]; then
      export DEPLOY_PORT="8940"
      export CONTAINER_NAME="haggle_bot"
    elif [[ "$CI_COMMIT_REF_NAME" == "dev-deploy" ]]; then
      export DEPLOY_PORT="8941"
      export CONTAINER_NAME="haggle_bot_dev"
    fi
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f $CONTAINER_NAME || true"
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p $DEPLOY_PORT:3000 --name $CONTAINER_NAME -e API_KEY=$API_KEY -e DISCORD_TOKEN=$DISCORD_TOKEN -e OPENAI_API_KEY=$OPENAI_API_KEY -e SENTRY_DSN=$SENTRY_DSN -e GCP_PROJECT_ID=$GCP_PROJECT_ID -e GCP_SERVICE_ACCOUNT_KEY=$GCP_SERVICE_ACCOUNT_KEY -v $CI_PROJECT_DIR/data-misc:/src/utils/data-misc $TAG_COMMIT"
  rules:
  - if: '$CI_COMMIT_REF_NAME == "main"'
  - if: '$CI_COMMIT_REF_NAME == "dev_deploy"'
postman_tests:
  stage: postman_tests
  image: docker:20.10
  services:
  - docker:20.10-dind
  before_script:
  - apk add --no-cache curl gettext
  script:
  - >
    if [[ "$CI_COMMIT_REF_NAME" == "main" ]]; then
      export SERVER_URL=$PROD_SERVER_URL
    else
      export SERVER_URL=$DEV_SERVER_URL
    fi
  - envsubst < "$CI_PROJECT_DIR/tests/ENVIRONMENT.postman_environment.json" > "$CI_PROJECT_DIR/tests/processed.ENVIRONMENT.postman_environment.json"
  - docker run -v "$CI_PROJECT_DIR/tests:/etc/newman" -t postman/newman:latest run "/etc/newman/Discord_GPT_Bot_Testing.postman_collection.json" --environment="/etc/newman/processed.ENVIRONMENT.postman_environment.json" --reporters="cli"
  rules:
  - if: '$CI_COMMIT_REF_NAME == "main"'
  - if: '$CI_COMMIT_REF_NAME == "dev_deploy"'
convert_postman_to_k6:
  stage: convert_postman_to_k6
  image: node:latest
  before_script:
    - npm install -g postman-to-k6
  script:
    - postman-to-k6 "$CI_PROJECT_DIR/tests/Discord_GPT_Bot_Testing.postman_collection.json" -o k6Script.js
  artifacts:
    paths:
      - k6Script.js
  rules:
  - if: '$CI_COMMIT_REF_NAME == "main"'
  - if: '$CI_COMMIT_REF_NAME == "dev_deploy"'
load_test_k6:
  stage: load_test_k6
  image: loadimpact/k6
  dependencies:
    - convert_postman_to_k6
  script:
    - k6 run k6Script.js
  rules:
  - if: '$CI_COMMIT_REF_NAME == "main"'
  - if: '$CI_COMMIT_REF_NAME == "dev_deploy"'
